using System;using System.IO;using System.Xml;using System.Net;using System.Collections;using System.Web.Services.Description;namespace HWSProxyGen{		public class Orchestration	{				/// <summary>		/// 		/// </summary>		/// <param name="args"></param>		[STAThread]		static void Main(string[] args)		{			if (args.Length != 2) 			{				Console.WriteLine("Usage: hsproxygen [web service uri] [output dir]");			} 			else 			{				string wsdlUri = args[0];				string outputDir = args[1];										Stream wsdlStream = RetrieveWsdlXml(wsdlUri);				XmlTextReader reader = new XmlTextReader(wsdlStream);				if (ServiceDescription.CanRead(reader)) 				{					ServiceDescription desc = ServiceDescription.Read(reader);										if (wsdlUri.IndexOf("?WSDL") > 0) 						desc.RetrievalUrl = wsdlUri.Substring(0, wsdlUri.IndexOf("?WSDL"));										ProxyModel proxyModel = new ProxyModel(desc);					Generator.CreateSpecificModule(proxyModel, outputDir);				}								wsdlStream.Close();			}		}		public static Stream RetrieveWsdlXml(string uri) 		{			HttpWebRequest req = (HttpWebRequest) WebRequest.Create(uri);			HttpWebResponse res = (HttpWebResponse) req.GetResponse();			Stream result = res.GetResponseStream();			return result;		}	}}